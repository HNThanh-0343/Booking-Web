@model X.PagedList.IPagedList<WEBSITE_TRAVELBOOKING.Models.SysRole>
@using WEBSITE_TRAVELBOOKING.Helper;
@using WEBSITE_TRAVELBOOKING.Models
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Core.Common
@using X.PagedList.Web.Common;
@{
    var ruleAction = ViewData["RuleAll"] as ModelsAndRole;
}

<div class="table-responsive">
    <table class="table table-sm table-centered w-100 dt-responsive nowrap">
        <thead class="table-light">
            <tr>
                <th class="text-center" width="170px">STT</th>
                <th>Nhóm quyền</th>
                @{
                    if (ruleAction != null && (ruleAction.IsEdit == true || ruleAction.IsDelete == true || ruleAction.IsPermission == true))
                    {
                        <th class="text-center" width="170px">Hàng động</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @{
                int idx = 1;
            }
            @foreach (var item in Model)
            {
                <tr>
                    <td class="text-center">@idx</td>
                    <td>@item.Name</td>
                    <td>
                        <div class="table-action">
                            @{
                                if (ruleAction != null && ruleAction.IsPermission == true)
                                {
                                    if (item.Id == 1)
                                    {
                                        <button class="btn btn-sm btn-info" title="Phân quyền" style="cursor:no-drop">
                                            <i class="mdi mdi-square-edit-outline"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("phanquyen", "quanLyNhomQuyen", new {id = item.Id})" class="btn btn-sm btn-info" title="Phân quyền" data-toggle='modal' data-sizeModal="modal-xl">
                                            <i class="mdi mdi-square-edit-outline"></i>
                                        </a>
                                    }
                                }
                                if (ruleAction != null && ruleAction.IsEdit == true)
                                {
                                    <a href="@Url.Action("chinhSuaNhomQuyen", "quanLyNhomQuyen", new {id = item.Id})" class="btn btn-sm btn-warning" title="Chỉnh sửa" data-toggle='modal' data-sizeModal="abc">
                                        <i class="mdi mdi-square-edit-outline"></i>
                                    </a>
                                }
                                if (ruleAction != null && ruleAction.IsDelete == true)
                                {
                                    if (item.Id == 1)
                                    {
                                        <button class="btn btn-sm btn-danger" title="Xóa" style="cursor:no-drop">
                                            <i class="mdi mdi-delete"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("chiTietNhomQuyen", "quanLyNhomQuyen", new {id = item.Id})" class="btn btn-sm btn-danger" title="Xóa" data-toggle='modal' data-sizeModal="abc">
                                            <i class="mdi mdi-delete"></i>
                                        </a>
                                    }
                                }
                            }
                        </div>
                    </td>
                </tr>
                idx++;
            }
        </tbody>
    </table>
    @{
        if (Model.Count > 0)
        {
            <div class="d-flex align-items-center justify-content-end py-1">
                @Html.PagedListPager(Model, page => Url.Action("childIndex", new { page }),
                     PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "DataTable" }))
            </div>
        }
    }
</div>